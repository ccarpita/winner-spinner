(()=>{"use strict";var t={686:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=i(n(10));class r extends HTMLElement{constructor(){super(),this._elementSerial=++r._serial,this._unsubscribe=[]}styleText(){return""}attachStyles(){const t="__mesh_global_style_"+this._elementSerial;if(this.createShadowRoot(),this.shadowRoot&&!this.findElement(`#${t}`)){const e=this.styleText();if(e){const n=this.createElement("style");n.textContent=e,n.id=t,this.shadowRoot.appendChild(n)}}}createShadowRoot(t="open",e=!1){return this.shadowRoot?this.shadowRoot:this.attachShadow({mode:t,delegatesFocus:e})}createClosedShadowRoot(t=!1){return this.createShadowRoot("closed",t)}connectedCallback(){this.attachStyles()}disconnectedCallback(){this.unsubscribeAll()}unsubscribeAll(){for(const t of this._unsubscribe)try{t()}catch(t){console.error(t)}this._unsubscribe=[]}createElement(t,e={}){const n=document.createElement(t);return Object.keys(e||{}).forEach((t=>n.setAttribute(t,e[t]))),n}findElement(t){return this.shadowRoot?this.shadowRoot.querySelector(t):null}findElements(t){return this.shadowRoot?Array.from(this.shadowRoot.querySelectorAll(t)):[]}createEmitter({async:t,delayMs:e}={async:!1,delayMs:1}){return new s.default({async:t,delayMs:e})}listen(t){this._unsubscribe.push(t)}pickDefined(...t){for(const e of t)if(e||!1===e||0===e||""===e)return e}}e.default=r,r._serial=0},10:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor({async:t,delayMs:e}={async:!1,delayMs:1}){this._registry={},this._async=t,this._delayMs=e}on(t,e){const{_registry:n}=this;return(n[t]=n[t]||[]).push(e),function(){n[t]=n[t].filter((t=>t!==e))}}emit(t,...e){const{_registry:n}=this;(n[t]=n[t]||[]).forEach((t=>{this._async?setTimeout((()=>t(...e)),this._delayMs||1):t(...e)}))}}},938:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=i(n(459));class r extends s.default{defaultValue(){return 0}normalizeInput(t){if(!t)return 0;const e=parseInt((t||"").replace(/[^0-9]+/,""),10);return isNaN(e)?this.defaultValue():e}keyCodePredicate(t){return null!==t.match(/^(Digit|Tab|Backspace|Control|Alt|Meta)/)}createInputElement(){const t=super.createInputElement();return t.type="number",t}}e.default=r,customElements.define("mesh-number-input",r)},459:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=i(n(686));class r extends s.default{constructor(){super(),this._input=null,this._inputPrevColor="",this._focussed=!1,this._value=this.defaultValue(),this._emitter=this.createEmitter()}defaultValue(){return""}normalizeInput(t){return String(t)}keyCodePredicate(t){return!0}get focussed(){return this._focussed}get value(){return this._value}set value(t){this._setInput(t)}onUpdate(t){return this._emitter.on("update",t)}onEnter(t){return this._emitter.on("enter",t)}createInputElement(){return this.createElement("input")}connectedCallback(){super.connectedCallback();const t=this._emitter,e=this.createShadowRoot(),n=this._input=this.createInputElement();this._setInput(this._value),n.addEventListener("keydown",(e=>{this.keyCodePredicate(e.code)||e.preventDefault(),"Enter"==e.code&&t.emit("enter")})),n.addEventListener("keyup",(()=>{this._setInput(n.value)})),n.addEventListener("focus",(()=>{this._focussed=!0,n.setAttribute("class","focussed")})),n.addEventListener("blur",(()=>{this._focussed=!1,n.setAttribute("class","")})),this.focus=()=>n.focus(),this._input=n,e.appendChild(n)}highlight(t){this._input&&(this._input.setAttribute("class","highlighted"),t&&(this._inputPrevColor=this._input.style.backgroundColor||"",this._input.style.backgroundColor=t))}clearHighlight(){this._input&&(this._input.setAttribute("class",this._focussed?"focussed":""),this._input.style.backgroundColor=this._inputPrevColor,this._inputPrevColor="")}_setInput(t){if(!this._input)return;const e=this._value;this._value=this.normalizeInput(t),this._input.value=String(this._value),e!==this._value&&this._emitter.emit("update")}styleText(){return"\n      input {\n        appearance: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        background-color: #eee;\n        border-radius: 0;\n        color: black;\n        border-width: 0px;\n        border-color: #ccc;\n        border-bottom-width: 0px;\n        border-left-width: 0px;\n        outline: none;\n        height: 3em;\n        width: 100%;\n        font-size: 2em;\n        padding: 20px;\n      }\n      input:hover {\n        background-color: #ddd;\n      }\n      input[type=number] {\n        -moz-appearance: textfield;\n      }\n      /* Chrome, Safari, Edge, Opera */\n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n      input.focussed {\n        background-color: #111;\n        color: white\n      }\n      input.highlighted {\n        background-color: #cc3;\n        color: white;\n        font-weight: bold;\n      }\n    "}}e.default=r,customElements.define("mesh-text-input",r)},445:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.SpinnerApp=e.EntryList=void 0;const s=i(n(686)),r=i(n(459)),o=i(n(938));new r.default,new o.default;class a extends s.default{constructor(){super(),this._nameInput=null,this._ticketsInput=null,this._emitter=this.createEmitter()}_getValue(){return{name:"",numTickets:0}}onUpdate(t){return this._emitter.on("update",t)}onEnter(t){return this._emitter.on("enter",t)}focus(){if(this._nameInput)return this._nameInput.focus()}highlight(t){this._nameInput&&this._ticketsInput&&(this._nameInput.highlight(t),this._ticketsInput.highlight(t))}clearHighlight(){this._nameInput&&this._ticketsInput&&(this._nameInput.clearHighlight(),this._ticketsInput.clearHighlight())}connectedCallback(){super.connectedCallback();const t=this.createShadowRoot(),e=this.createGridItem("name"),n=this._nameInput=this.createElement("mesh-text-input");e.appendChild(n);const i=this.createGridItem("tickets"),s=this._ticketsInput=this.createElement("mesh-number-input");i.appendChild(s);const r=this.createElement("div",{class:"container"});r.appendChild(e),r.appendChild(i),t.appendChild(r),this._getValue=()=>({name:n.value,numTickets:s.value||0}),this.listen(n.onUpdate((()=>this._emitter.emit("update")))),this.listen(s.onUpdate((()=>this._emitter.emit("update")))),this.listen(n.onEnter((()=>s.focus()))),this.listen(s.onEnter((()=>{this._emitter.emit("enter")})))}createGridItem(t){return this.createElement("div",{class:"item","data-attr":t})}get value(){return this._getValue()}styleText(){return"\n      .container {\n        display: flex;\n        flex-direction: row; \n      }\n      .item {\n      }\n      .item[data-attr=name] {\n        width: 66%;\n      }\n      .item[data-attr=tickets] {\n        width: 33%;\n      }\n    "}}customElements.define("single-entry",a);class l extends s.default{get entryElements(){return this.findElements("single-entry")}connectedCallback(){super.connectedCallback();const t=this.createShadowRoot(),e=this.createElement("div",{class:"container"});t.appendChild(e);for(const t of this.entryElements)t.remove();const n=({focus:t}={focus:!1})=>{const i=this.createElement("single-entry");this.listen(i.onUpdate((()=>{setTimeout((()=>{0===this.entryElements.filter((t=>{const{name:e,numTickets:n}=t.value;return""===e&&0===n})).length?n():this.removeEmptyEntries()}),1)}))),this.listen(i.onEnter((()=>{let t=!1,e=!1;for(const n of this.entryElements)if(n===i)t=!0;else if(t){e=!0,n.focus();break}e||n({focus:!0})}))),e.appendChild(i),t&&i.focus()};n()}removeEmptyEntries(){const t=this.entryElements.filter((t=>!t.value.name&&0===t.value.numTickets));t.length<2||t.slice(1).forEach((t=>t.remove()))}get entries(){return this.entryElements.map((t=>t.value)).filter((t=>t.name&&t.numTickets>0))}get entriesWithValues(){return this.entryElements.map((t=>t.value.name&&t.value.numTickets>0))}highlightEntry(t,e){this.clearHighlights();const n=this.entryElements[t];n&&(n.setAttribute("data-highlight","1"),n.highlight(e))}clearHighlights(){this.entryElements.forEach((t=>{t.setAttribute("data-highlight",""),t.clearHighlight()}))}styleText(){return"\n      .container {\n        display: flex;\n        flex-direction: column;\n      }\n      single-entry {\n        width: 100%;\n      }\n      single-entry[data-highlight=1] {\n        background-color: #ffd\n      }\n      button {\n        padding: 20px;\n      }\n    "}}e.EntryList=l,customElements.define("entry-list",l);class u extends s.default{constructor(){super(),this._button=null,this._emitter=this.createEmitter()}connectedCallback(){super.connectedCallback();const t=this.createShadowRoot(),e=this._button=this.createElement("button");e.textContent="Spin It!";const n=()=>{this._emitter.emit("click")};e.addEventListener("click",n),this.listen((()=>e.removeEventListener("click",n))),t.appendChild(e)}set text(t){this._button&&(this._button.textContent=t)}styleText(){return"\n    button {\n      background-color: #eee;\n      width: 100%;\n      font-size: 2em;\n      height: 3em;\n      border: 0px;\n      margin-top: 1em;\n    }\n    button:hover { background-color: black; color: white }\n    button:focus { background-color: black; color: white }\n    "}onClick(t){return this._emitter.on("click",t)}}customElements.define("spinner-button",u);class c extends s.default{constructor(){super(...arguments),this._interval=null}connectedCallback(){super.connectedCallback();const t=this.createShadowRoot(),e=this.createElement("entry-list");t.appendChild(e);const n=this.createElement("spinner-button");t.appendChild(n),this.listen(n.onClick((()=>{const t=e.entries,i=t.reduce(((t,e)=>e.numTickets+t),0);if(!i)return;this._interval&&clearInterval(this._interval);let s=0;const r=1e3/i;this._interval=setInterval((()=>{s++;const n=s%i;let r=0,o=0;for(const i of t){const t=r+i.numTickets;if(n>=r&&n<t){e.highlightEntry(o,"#cc3");break}r=t,o++}}),r),n.text="Spinning...",setTimeout((()=>{this._interval&&(clearInterval(this._interval),this._interval=null);const s=Math.floor(Math.random()*i);e.clearHighlights();let r=t[0],o=0,a=0;for(const i of t){const t=o+i.numTickets;if(s>=o&&s<t){r=i,e.highlightEntry(a,"#e94"),n.text="We have a winner! Click to spin again.";break}a+=1,o=t}}),3e3)})))}}e.SpinnerApp=c,customElements.define("spinner-app",c)}},e={};!function n(i){var s=e[i];if(void 0!==s)return s.exports;var r=e[i]={exports:{}};return t[i].call(r.exports,r,r.exports,n),r.exports}(445)})();